{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Desktop\\\\practice\\\\4Krelax\\\\4krelax\\\\src\\\\pages\\\\playlist\\\\playlists.js\";\nimport React from 'react';\nimport { Icon, InlineIcon } from '@iconify/react';\nimport playCircleO from '@iconify-icons/fa/play-circle-o';\nimport \"./playlists.css\";\nimport \"../../componets/header/header.css\";\nimport sha1 from 'crypto-js/sha1';\n\nconst Playlists = playlists => {\n  console.log(playlists.plst);\n  let myplaylist;\n\n  async function GetPlaylist() {\n    const privateKey = \"~UniHash-767250902345~\";\n    let action = \"action=LoginAnonymous\";\n    let endpoint = \"https://4krelax.bringstream.com/Engine/apic/apic.php?\";\n    let queryString = \"https://4krelax.bringstream.com/Engine/apic/apic.php?\" + action; //const logindata ={\"emailLogin\":{\"email\":\"dk@itf-ua.org\",\"password\":\"&Px5foU7J[$g2[^\"}};\n\n    let formData = new FormData();\n    let signature = sha1(action + privateKey + '{}');\n    formData.append('jsonData', '{}');\n    formData.append('signature', signature);\n    fetch(queryString, {\n      mode: \"cors\",\n      method: \"POST\",\n      body: formData\n    }).then(response => {\n      return response.json();\n    }).then(data => {\n      queryString = \"https://4krelax.bringstream.com/Engine/apic/apic.php?action=GetPlaylists&openKey=\" + data.aOpenKey;\n      action = \"action=GetPlaylists&openKey=\" + data.aOpenKey;\n      let formData = new FormData();\n      let plid = playlists.match.params.id;\n      let jsonData = `{\"where\":\"id = ${plid}\",\"general\":1,\"new\":1,\"favorites\":1,\"statistic\":1,\"count\":10,\"playlists_fields\":{\"id\":0,\"name\":30,\"description\":50,\"premium\":0,\"free\":0,\"duration\":0,\"pictures\":[640,1920],\"videos_count\":0},\"videos\":{\"count\":10,\"fields\":{\"id\":0,\"name\":30,\"duration\":0,\"hdr\":0,\"pictures\":[600],\"position\":0}}}`;\n      let signature = sha1(action + data.aPrivateKey + jsonData);\n      console.log(\"privatekey\", data.aPrivateKey);\n      formData.append('jsonData', jsonData);\n      formData.append('signature', signature);\n      myplaylist = fetch(queryString, {\n        mode: \"cors\",\n        method: \"POST\",\n        body: formData\n      }).then(response => {\n        return response.json();\n      }).then(data => {}).catch(error => {\n        console.log(\"error\", error);\n      });\n      console.log(\"data\", data);\n    }).catch(error => {\n      console.log(\"error\", error);\n    });\n  } // if(playlists.plst!=null&&Array.isArray(playlists.plst))\n  // {\n  //     if(typeof playlists.plst[playlists.match.params.id-1] === 'object')\n  //     {\n  //       myplaylist=playlists.plst[playlists.match.params.id-1];\n  //     }\n  // }\n\n\n  playlists.plst[0].playlists.forEach(item => {\n    if (playlists.match.params.id == item.id) {\n      myplaylist = item;\n    }\n  });\n  console.log(myplaylist);\n  if (myplaylist == null) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"123\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 35\n  }, this);\n  console.log(myplaylist);\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"playlists-s\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"title-carousel\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n                children: /*#__PURE__*/_jsxDEV(\"a\", {\n                  href: \"#\",\n                  children: [/*#__PURE__*/_jsxDEV(Icon, {\n                    icon: playCircleO\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 93,\n                    columnNumber: 14\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    children: myplaylist.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 94,\n                    columnNumber: 14\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 92,\n                  columnNumber: 12\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 91,\n                columnNumber: 11\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"playlist-desc\",\n                children: myplaylist.description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 97,\n                columnNumber: 14\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 10\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 8\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: myplaylist.videos.map(item => {\n          let itemlink = \"video/\" + item.id;\n          let date = new Date(0);\n          date.setSeconds(item.duration); // specify value for SECONDS here\n\n          let itemtime = date.toISOString().substr(11, 8);\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              margin: \"10px\"\n            },\n            className: \"col-12 col-sm-6 col-md-6 col-lg-4\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"item item-pl\",\n              children: /*#__PURE__*/_jsxDEV(\"a\", {\n                href: itemlink,\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"c-item-style item-style-play\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"marks\",\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"free\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 118,\n                      columnNumber: 35\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 118,\n                    columnNumber: 12\n                  }, this), \"        \", /*#__PURE__*/_jsxDEV(\"img\", {\n                    src: item.pictures[600],\n                    alt: item.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 118,\n                    columnNumber: 77\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 117,\n                  columnNumber: 8\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"c-item-info  row justify-content-between\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"col-8\",\n                    children: /*#__PURE__*/_jsxDEV(\"p\", {\n                      className: \"cir-st1\",\n                      children: item.name\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 121,\n                      columnNumber: 33\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 121,\n                    columnNumber: 9\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"col-4 c-item-info-st2\",\n                    children: /*#__PURE__*/_jsxDEV(\"p\", {\n                      className: \"cir-st2\",\n                      children: itemtime\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 122,\n                      columnNumber: 48\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 122,\n                    columnNumber: 9\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 120,\n                  columnNumber: 7\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 116,\n                columnNumber: 7\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 5\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 11\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 2\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 3\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 8\n  }, this);\n};\n\n_c = Playlists;\nexport default Playlists;\n\nvar _c;\n\n$RefreshReg$(_c, \"Playlists\");","map":{"version":3,"sources":["C:/Users/Admin/Desktop/practice/4Krelax/4krelax/src/pages/playlist/playlists.js"],"names":["React","Icon","InlineIcon","playCircleO","sha1","Playlists","playlists","console","log","plst","myplaylist","GetPlaylist","privateKey","action","endpoint","queryString","formData","FormData","signature","append","fetch","mode","method","body","then","response","json","data","aOpenKey","plid","match","params","id","jsonData","aPrivateKey","catch","error","forEach","item","name","description","videos","map","itemlink","date","Date","setSeconds","duration","itemtime","toISOString","substr","margin","pictures"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { Icon, InlineIcon } from '@iconify/react';\nimport playCircleO from '@iconify-icons/fa/play-circle-o';\nimport \"./playlists.css\";\nimport \"../../componets/header/header.css\";\nimport sha1 from 'crypto-js/sha1';\nconst Playlists = (playlists) => {\n  console.log(playlists.plst);\n  let myplaylist;\n  async function GetPlaylist(){\n  const privateKey=\"~UniHash-767250902345~\";\n     let action = \"action=LoginAnonymous\";\n     let endpoint = \"https://4krelax.bringstream.com/Engine/apic/apic.php?\";\n     let queryString = \"https://4krelax.bringstream.com/Engine/apic/apic.php?\"+action;\n      //const logindata ={\"emailLogin\":{\"email\":\"dk@itf-ua.org\",\"password\":\"&Px5foU7J[$g2[^\"}};\n     let formData = new FormData();\n     let signature= sha1(action+privateKey+'{}')\nformData.append('jsonData','{}');\nformData.append('signature',signature);\n\n     fetch(queryString, {\n         mode:\"cors\",\n         method:\"POST\",\n         body:formData\n})\n  .then((response) => {\n     \n    return response.json();\n  })\n  .then(data => \n    {\n         queryString = \"https://4krelax.bringstream.com/Engine/apic/apic.php?action=GetPlaylists&openKey=\"+data.aOpenKey;\n         action=\"action=GetPlaylists&openKey=\"+data.aOpenKey;\n        let formData = new FormData();\n        let plid =playlists.match.params.id;\n        let jsonData =`{\"where\":\"id = ${plid}\",\"general\":1,\"new\":1,\"favorites\":1,\"statistic\":1,\"count\":10,\"playlists_fields\":{\"id\":0,\"name\":30,\"description\":50,\"premium\":0,\"free\":0,\"duration\":0,\"pictures\":[640,1920],\"videos_count\":0},\"videos\":{\"count\":10,\"fields\":{\"id\":0,\"name\":30,\"duration\":0,\"hdr\":0,\"pictures\":[600],\"position\":0}}}`;\n        let signature = sha1(action + data.aPrivateKey + jsonData);\n        console.log(\"privatekey\",data.aPrivateKey);\n        formData.append('jsonData',jsonData);\n        formData.append('signature',signature);\n        myplaylist= fetch(queryString, {\n                mode:\"cors\",\n                method:\"POST\",\n                body:formData\n        })\n        .then((response) => {\n\n            return response.json();\n        })\n        .then(data => \n            {})\n            .catch(error => {\n            console.log(\"error\", error);\n        });\n        console.log(\"data\",data);\n\n    }\n\n\n    \n  )\n  .catch(error => {\n    console.log(\"error\", error);\n  });\n}\n\n    // if(playlists.plst!=null&&Array.isArray(playlists.plst))\n    // {\n    //     if(typeof playlists.plst[playlists.match.params.id-1] === 'object')\n    //     {\n    //       myplaylist=playlists.plst[playlists.match.params.id-1];\n    //     }\n      \n    // }\n\n    playlists.plst[0].playlists.forEach(item=>{\n        if(playlists.match.params.id==item.id)\n          {myplaylist=item;}\n    });\n      console.log(myplaylist);\n    if (myplaylist==null ) return(<div>123</div>);\n    console.log(myplaylist);\n    return (\n       <section className=\"playlists-s\">\n  <div className=\"container\">\n\t      <div className=\"row\">\n\n      <div className=\"col\">\n        <div className=\"title-carousel\">\n         <div>\n          <h1>\n           <a href=\"#\">\n             <Icon icon={playCircleO} />\n             <span>{myplaylist.name}</span>\n           </a>\n         </h1>\n             <div className=\"playlist-desc\">{myplaylist.description}</div>\n       </div>\n     </div>\n   </div>\n </div>\n \n <div className=\"row\" >\n\n\n\n{\n  myplaylist.videos.map((item) => {\n    let itemlink =\"video/\"+item.id;\n       let date = new Date(0);\n        date.setSeconds(item.duration); // specify value for SECONDS here\n\n       let itemtime = date.toISOString().substr(11, 8);\n  return (<div style={{margin:\"10px\"}} className=\"col-12 col-sm-6 col-md-6 col-lg-4\" >\n    <div className=\"item item-pl\">\n      <a href={itemlink}>\n       <div className=\"c-item-style item-style-play\">\n           <div className=\"marks\"><div className=\"free\"></div></div>        <img src={item.pictures[600]} alt={item.name}/> \n      </div>\n      <div className=\"c-item-info  row justify-content-between\">\n        <div className=\"col-8\" ><p className=\"cir-st1\">{item.name}</p></div>\n        <div className=\"col-4 c-item-info-st2\"><p className=\"cir-st2\">{itemtime}</p></div>\n      </div>\n    </a>\n  </div>\n</div>);\n  })\n}\n\n\n\n\n\n\n   \n   \n\n</div>\n</div>\n</section>\n    )\n}\n\nexport default Playlists;"]},"metadata":{},"sourceType":"module"}